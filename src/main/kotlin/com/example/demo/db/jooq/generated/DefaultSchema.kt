/*
 * This file is generated by jOOQ.
 */
package com.example.demo.db.jooq.generated


import com.example.demo.db.jooq.generated.tables.FlywaySchemaHistory
import com.example.demo.db.jooq.generated.tables.Users
import com.example.demo.db.jooq.generated.tables.Usersecrets

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DefaultSchema : SchemaImpl("", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>DEFAULT_SCHEMA</code>
         */
        val DEFAULT_SCHEMA = DefaultSchema()
    }

    /**
     * The table <code>flyway_schema_history</code>.
     */
    val FLYWAY_SCHEMA_HISTORY get() = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY

    /**
     * The table <code>users</code>.
     */
    val USERS get() = Users.USERS

    /**
     * The table <code>userSecrets</code>.
     */
    val USERSECRETS get() = Usersecrets.USERSECRETS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
        Users.USERS,
        Usersecrets.USERSECRETS
    )
}
